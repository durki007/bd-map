version: '3.9'

x-common-variables: &common-variables
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_DB: $POSTGRES_DB
  POSTGRES_PORT: $POSTGRES_PORT
  NEXT_PUBLIC_API_PORT: $NEXT_PUBLIC_API_PORT
  FRONTEND_PORT: $FRONTEND_PORT

services:
  postgres:
    image: postgres:16-alpine
    restart: always
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      <<: *common-variables
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  map-backend:
    restart: always
    build:
      context: ./map-backend
      target: runner
    depends_on:
      - postgres
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${NEXT_PUBLIC_API_PORT}:8080'
    environment:
      <<: *common-variables
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_HOST: host.docker.internal
    command: java -jar /app.jar

  map-frontend:
    restart: always
    build:
      context: ./map-frontend
      target: runner
    depends_on:
      - map-backend
      - postgres
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${FRONTEND_PORT}:3000'
    environment:
      <<: *common-variables
      NEXT_PUBLIC_API_PORT: $NEXT_PUBLIC_API_PORT
      NEXT_PUBLIC_API_HOST: host.docker.internal
      FRONTEND_PORT: $FRONTEND_PORT
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_HOST: host.docker.internal
    command: pnpm start

volumes:
  postgres_data:
